(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{501:function(e,s,n){"use strict";n.r(s);var r=n(15),t=Object(r.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"整体步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体步骤"}},[e._v("#")]),e._v(" 整体步骤")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 关在在于 initialize 初始化模型，支持部署任意模型，基于netty\n# 注意java版本大于17\n# /Library/Java/JavaVirtualMachines/jdk-20.jdk/Contents/Home/bin\n# 切换java版本：https://juejin.cn/post/6871959224314757134\n# /usr/libexec/java_home -V 查看所有版本\nexport JAVA_HOME=`/usr/libexec/java_home -v 20.0.1`\n\n# 下载仓库\ngit clone https://github.com/pytorch/serve\n\n# 必须使用该初始化环境 cpu\npython ./ts_scripts/install_dependencies.py\npython ./ts_scripts/install_dependencies.py --cuda=cu110  # gpu\n\n# 生成protobuf\npython -m grpc_tools.protoc --proto_path=frontend/server/src/main/resources/proto/ --python_out=ts_scripts --grpc_python_out=ts_scripts frontend/server/src/main/resources/proto/inference.proto frontend/server/src/main/resources/proto/management.proto\n\n# 将pth打包为mar\ntorch-model-archiver --model-name densenet161 --version 1.0 --model-file ./examples/image_classifier/densenet_161/model.py --serialized-file ./model_store/densenet161-8d451a50.pth --export-path model_store --extra-files ./examples/image_classifier/index_to_name.json --handler image_classifier\n\n# 启动serve (--models 配置使用的模型)\ntorchserve --start --ncs --model-store ./model_store --models ./model_store/densenet161.mar\n\n# http 测试\ncurl http://127.0.0.1:8080/predictions/densenet161 -T kitten_small.jpg\n\n# grpc 测试\npython ts_scripts/torchserve_grpc_client.py infer densenet161 examples/image_classifier/kitten.jpg\npython ts_scripts/torchserve_grpc_client.py register densenet161\npython ts_scripts/torchserve_grpc_client.py unregister densenet161\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br")])]),s("h2",{attrs:{id:"torch-model-archiver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#torch-model-archiver"}},[e._v("#")]),e._v(" torch-model-archiver")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 必须的文件 handler.py、model.py、mar\n--model-name: 模型名称，导出后的模型文件是“模型名称.mar”\n--serialized-file：mar、tgz都可以，模型序列化文件，这里有两种文件数据，一种是eager mode模式下，包含状态字典的.pt或者.pth文件；另一种是TorchScript条件下的可执行模块。\n--model-file：模型结构框架，通常只包含一个类，类是torch.nn.modules的子类, 包含 向前转播等\n--handler： torchserver 的入口程序，它负责模型的加载，预测等\n--extra-files：额外文件，模型运行等其它额外文件都可以，可以包含多个，用逗号将不同文件拼接成一个字符串。\n--run-time：选择运行的python版本。\n--archive-format：选择压缩文件的格式, {tgz,no-archive,default} 。可以是tgz压缩文件，也可以是mar文件。\n--export-path：mar存档文件的保存地址，未设置则保存在当前目录。\n-f: 强制覆盖。\n-v --version: 模型的版本\n-r, --requirement-f: requirements.txt依赖包，模型环境相关的依赖包\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://obsidian-foveagge.oss-cn-beijing.aliyuncs.com/blog/9RHBwj.png",alt:""}})]),e._v(" "),s("h2",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[e._v("#")]),e._v(" 接口")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("initialize 接口： 这个接口用于初始化模型。您需要在这个接口中加载模型的权重和参数，并设置模型的状态（如评估模式）。\npreprocess 接口： 这个接口用于数据预处理，将原始输入数据转换为模型可以接受的格式。您可以在这里进行数据处理、转换和编码。\ninference 接口： 这个接口用于执行推理操作，将预处理后的数据传递给加载的模型，并获取模型的输出。您需要在这里调用模型的前向传播方法。\npostprocess 接口： 这个接口用于后处理，将模型输出转换为最终的结果。这可能涉及到解码、映射到标签、格式转换等。\ncleanup 接口： 这个接口用于清理资源，当 TorchServe 服务停止时会被调用。您可以在这里释放模型占用的资源。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/weixin_45063703/article/details/125146002",target:"_blank",rel:"noopener noreferrer"}},[e._v("torchserve调用官方库模型"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/weixin_34910922/article/details/114552407",target:"_blank",rel:"noopener noreferrer"}},[e._v("torchserve使用-注册模型设置参数（二）"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/pytorch/serve/tree/master/examples/Huggingface_Transformers",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方github demo"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/zhoumoon/article/details/109283826",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用TorchServe部署PyTorch模型以进行大规模推理"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://xiang753017.gitbook.io/zixiang-blog/shi-yong-torchserve-bu-shu-model",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 TorchServe 部署 Model"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=t.exports}}]);