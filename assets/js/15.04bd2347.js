(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{362:function(t,n,s){"use strict";s.r(n);var e=s(15),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("软件设计中，在应用启动的时候，我们将应用的所有实例化对象都放在一个容器中，统一的进行控制。")])]),t._v(" "),n("h2",{attrs:{id:"控制反转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制反转"}},[t._v("#")]),t._v(" 控制反转")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 控制反转（IOC）\n管理实例化后的实例容器, 默认是单例\n# 控制反转（Inversion of Control，IoC）  \n容器负责对象的创建和生命周期的管理，而不是由代码自己创建和管理对象\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h2",{attrs:{id:"依赖注入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入"}},[t._v("#")]),t._v(" 依赖注入")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("依赖注入（DI）\n# 依赖注入（Dependency Injection，DI）  \n# 构造函数注入（Constructor Injection）：  \n通过对象的构造函数将依赖对象作为参数传入，容器在创建对象时自动解析依赖并提供所需的依赖对象。  \n# Setter 方法注入（Setter Injection）  \n通过对象的 setter 方法设置依赖对象，容器在创建对象后调用相应的 setter 方法来注入依赖对象。  \n# 接口注入（Interface Injection）  \n通过对象实现一个接口，在接口中定义注入方法，容器在创建对象后调用接口的注入方法来注入依赖对象。 \n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.jianshu.com/p/31b299bf04d8",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/31b299bf04d8"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/spring/spring-x-framework-ioc.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring基础 - Spring核心之控制反转(IOC)"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=a.exports}}]);